  protected title = 'template';

  showSidebar = false; // Default to false

  constructor(private router: Router) {
    this.router.events.subscribe(event => {
      if (event instanceof NavigationEnd) {
        // Check if the current URL is exactly '/dash'
        this.showSidebar = event.url === '/dash';
      }
    });
  }
------------------------------------------
<div id="wrapper">

 <!-- Sidebar Component -->
  <app-sidebar *ngIf="showSidebar"></app-sidebar>


  <!-- Content Wrapper -->
  <div id="content-wrapper" class="d-flex flex-column">

    <!-- Main Content -->
    <div id="content">

      <!-- Default Navbar -->
      <app-navbar></app-navbar>

      <!-- Main Page Content -->
      <div class="container-fluid">
        <router-outlet></router-outlet>
      </div>

    </div>
    <!-- End of Main Content -->

    <!-- Footer Component -->
    <app-footer></app-footer>

  </div>
  <!-- End of Content Wrapper -->

</div>
<!-- End of Page Wrapper -->

<!-- Scroll to Top Button-->
<a class="scroll-to-top rounded" href="#page-top">
  <i class="fas fa-angle-up"></i>
</a>
=================================
Se4manto
====================
app.ts
protected title = 'HospitalProjectInSpringBoot';

   loginStatus$: Observable<string | null>;

  constructor(public authService: AuthService) {
    // now BehaviorSubject is already initialized from localStorage
    this.loginStatus$ = this.authService.userRole$;
  }
=====================================
<div *ngIf="loginStatus$ | async as role; else onlyContent" id="wrapper">
  <app-sidebar></app-sidebar>
  <div id="content-wrapper" class="d-flex flex-column">
    <div id="content">
      <app-navbar></app-navbar>
      <div class="container-fluid">
        <router-outlet></router-outlet>
      </div>
    </div>
    <app-footer></app-footer>
  </div>
</div>

<ng-template #onlyContent>
  <div class="container-fluid">
    <router-outlet></router-outlet>
  </div>
</ng-template>




**********************************
**********************************
ধরো আঃ রহিম খান, আমি তোমার জন্য **Angular প্রজেক্টে সম্পূর্ণ লগইন-বেসড UI** বানাচ্ছি, যেখানে:

1. **লগইন ইউজার** → পুরো UI (sidebar, navbar, footer) দেখবে।
2. **নন-লগইন ইউজার** → শুধুমাত্র `router-outlet` দেখবে।
3. Navbar-এ **Login / Logout** dynamicভাবে কাজ করবে।
4. Sidebar ইউজার রোল অনুযায়ী menus দেখাবে।

নিচে সম্পূর্ণ কোড structure দিচ্ছি যা তোমার প্রজেক্টে perfectly কাজ করবে।

---

### **app.component.ts**

```ts
import { Component } from '@angular/core';
import { Observable } from 'rxjs';
import { AuthService } from './service/auth-service';
import { Role } from './model/role.model';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'HospitalProjectInSpringBoot';

  loginStatus$: Observable<Role | null>;

  constructor(public authService: AuthService) {
    this.loginStatus$ = this.authService.userRole$;
  }
}
```

---

### **app.component.html**

```html
<!-- Check login status -->
<div *ngIf="loginStatus$ | async as role; else onlyContent" id="wrapper">
  <app-sidebar></app-sidebar>
  <div id="content-wrapper" class="d-flex flex-column">
    <div id="content">
      <app-navbar></app-navbar>
      <div class="container-fluid">
        <router-outlet></router-outlet>
      </div>
    </div>
    <app-footer></app-footer>
  </div>
</div>

<ng-template #onlyContent>
  <!-- Only router-outlet for non-logged in users -->
  <div class="container-fluid mt-3">
    <router-outlet></router-outlet>
  </div>
</ng-template>
```

---

### **navbar.component.ts**

```ts
import { Component, OnInit } from '@angular/core';
import { AuthService } from '../../service/auth-service';
import { Role } from '../../model/role.model';

@Component({
  selector: 'app-navbar',
  templateUrl: './navbar.html',
  styleUrls: ['./navbar.css']
})
export class NavbarComponent implements OnInit {

  isLoggedIn: boolean = false;
  userRole: Role | null = null;

  constructor(private authService: AuthService) {}

  ngOnInit(): void {
    this.authService.userRole$.subscribe(role => {
      this.userRole = role;
      this.isLoggedIn = !!role;
    });
  }

  logout() {
    this.authService.logout();
  }
}
```

---

### **navbar.component.html** (dynamic Login/Logout)

```html
<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 shadow">
  <div class="container-fluid">
    <a class="navbar-brand" routerLink="/">HospitalProject</a>

    <ul class="navbar-nav ms-auto">
      <li *ngIf="!isLoggedIn" class="nav-item">
        <a class="nav-link" routerLink="/login"><i class="fa fa-sign-in-alt"></i> Login</a>
      </li>
      <li *ngIf="isLoggedIn" class="nav-item">
        <a class="nav-link" (click)="logout()" style="cursor:pointer;"><i class="fa fa-sign-out-alt"></i> Logout</a>
      </li>
    </ul>
  </div>
</nav>
```

---

### **sidebar.component.ts**

```ts
import { Component, OnInit, ChangeDetectorRef, Inject, PLATFORM_ID } from '@angular/core';
import { AuthService } from '../../service/auth-service';
import { Role } from '../../model/role.model';
import { isPlatformBrowser } from '@angular/common';

@Component({
  selector: 'app-sidebar',
  templateUrl: './sidebar.html',
  styleUrls: ['./sidebar.css']
})
export class SidebarComponent implements OnInit {

  userRole: Role | null = null;

  constructor(
    private authService: AuthService,
    private cdr: ChangeDetectorRef,
    @Inject(PLATFORM_ID) private platformId: Object
  ) {}

  ngOnInit(): void {
    if (isPlatformBrowser(this.platformId)) {
      this.authService.userRole$.subscribe(role => {
        this.userRole = role;
        this.cdr.markForCheck();
      });
    }
  }

  isAdmin(): boolean { return this.userRole === Role.ADMIN; }
  isUser(): boolean { return this.userRole === Role.USER; }
  isEmployee(): boolean { return this.userRole === Role.EMPLOYEE; }
}
```

---

### **sidebar.component.html** (role-based menu)

```html
<ul class="navbar-nav sidebar sidebar-dark accordion shadow" id="accordionSidebar">
  <a class="sidebar-brand d-flex align-items-center justify-content-center" routerLink="/">
    <div class="sidebar-brand-text mx-3">HospitalProject</div>
  </a>

  <hr class="sidebar-divider my-0">

  <li class="nav-item"><a class="nav-link" routerLink="/">Home</a></li>

  <!-- Admin Menu -->
  <ng-container *ngIf="isAdmin()">
    <li class="nav-item"><a class="nav-link" routerLink="/admin-profile">Admin Profile</a></li>
    <li class="nav-item"><a class="nav-link" routerLink="/admindash">Dashboard</a></li>
    <li class="nav-item"><a class="nav-link" routerLink="/viewalluser">All Users</a></li>
  </ng-container>

  <!-- User Menu -->
  <ng-container *ngIf="isUser()">
    <li class="nav-item"><a class="nav-link" routerLink="/account-profile">Profile</a></li>
    <li class="nav-item"><a class="nav-link" routerLink="/acctrst">Transaction Statement</a></li>
  </ng-container>

  <!-- Employee Menu -->
  <ng-container *ngIf="isEmployee()">
    <li class="nav-item"><a class="nav-link" routerLink="/employee-profile">Profile</a></li>
    <li class="nav-item"><a class="nav-link" routerLink="/emptr">Transaction</a></li>
  </ng-container>
</ul>
```

---

✅ এই setup দিয়ে:

* **লগইন ইউজার** → সম্পূর্ণ UI (Sidebar + Navbar + Footer + Router-outlet)।
* **নন-লগইন ইউজার** → শুধু Router-outlet।
* Navbar-এ **Login / Logout** automatic switch।
* Sidebar menus role-based।

---

আমি চাইলে পরের ধাপে তোমার **Sidebar + Navbar + Footer UI কে Bootstrap + Admin Template fully responsive** বানিয়ে দিতে পারি, যাতে production-ready মনে হয়।

তুমি কি সেটা করতে চাও?
