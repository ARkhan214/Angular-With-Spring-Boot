
============================================
import { Inject, Injectable, PLATFORM_ID } from '@angular/core';
import { CanActivate, Router, UrlTree } from '@angular/router';
import { Observable } from 'rxjs';
import { AuthService } from '../service/auth-service';

@Injectable({
  providedIn: 'root'
})
export class UserGuard implements CanActivate {

  constructor(

    private router: Router

  ) { }

  canActivate(): boolean {
    const data = localStorage.getItem('loggedInUser');
    if (data) {
      const user = JSON.parse(data);
      if (user.type === 'user') {
        console.log(' User access granted');
        return true;
      }
    }

    console.warn(' User access denied');
    this.router.navigate(['/login']);
    return false;
  }

}

===========================================

import { Injectable } from '@angular/core';
import { CanActivate, Router } from '@angular/router';

@Injectable({
  providedIn: 'root'
})
export class AdminGuard implements CanActivate {

  constructor(private router: Router) {}

  canActivate(): boolean {
    const data = localStorage.getItem('loggedInUser');
    if (data) {
      const user = JSON.parse(data);
      if (user.type === 'admin') {
        console.log('Admin access granted');
        return true;
      }
    }

    console.warn('Admin access denied');
    this.router.navigate(['/login']);
    return false;
  }
}



===========================================
import { Injectable } from '@angular/core';
import { CanActivate, Router } from '@angular/router';

@Injectable({
  providedIn: 'root'
})
export class MultiRoleGuard implements CanActivate {

  constructor(private router: Router) {}

  canActivate(): boolean {
    const loggedInUser = localStorage.getItem('loggedInUser');
    
    if (loggedInUser) {
      const user = JSON.parse(loggedInUser);
      
    
      if (user.type === 'user' || user.type === 'admin') {
        return true;
      }
    }

    
    this.router.navigate(['/login']);
    return false;
  }
}
