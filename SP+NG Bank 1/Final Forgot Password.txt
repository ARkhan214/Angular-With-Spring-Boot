Note:Dont forgot add url in Sequrity configüòâüòä



====Entity=====
 add NEW Fild


    // Extra field for reset
    private String resetToken;
    private Date tokenExpiry;
 
		+

constrocter+getter +setter




===Rest controller====

//for pasword reset
    @PostMapping("forgot-password")
    public ResponseEntity<Map<String, String>> forgotPassword(@RequestParam String email) {
        String result = authService.forgotPassword(email);
        return ResponseEntity.ok(Map.of("message", result));
    }

    @PostMapping("reset-password")
    public ResponseEntity<Map<String, String>> resetPassword(@RequestParam String token,
                                                             @RequestParam String newPassword) {
        String result = authService.resetPassword(token, newPassword);
        return ResponseEntity.ok(Map.of("message", result));
    }


======service=======

//For Forgot & Reset Password
    // Forgot Password
    public String forgotPassword(String email) {
        Optional<User> userOpt = userRepository.findByEmail(email);
        if (userOpt.isPresent()) {
            User user = userOpt.get();

            // 1. Token generate
            String token = UUID.randomUUID().toString();
            user.setResetToken(token);

            // 2. Expiry after 15 munites
            Calendar calendar = Calendar.getInstance();
            calendar.add(Calendar.MINUTE, 15);
            Date expiryDate = calendar.getTime();
            user.setTokenExpiry(expiryDate);

            // 3. Save user
            userRepository.save(user);

            // 4. Reset link & email
            String resetLink = "http://localhost:4200/reset-password?token=" + token;
            String mailBody = "<!DOCTYPE html>"
                    + "<html><body>"
                    + "<p>Dear " + user.getName() + ",</p>"
                    + "<p>You requested a password reset. Click the link below to reset your password:</p>"
                    + "<p><a href=\"" + resetLink + "\">Reset Password</a></p>"
                    + "<p>This link will expire in 15 minutes.</p>"
                    + "<p>Best regards,<br>Support Team</p>"
                    + "</body></html>";

            try {
                sendEmail(user.getEmail(), "Password Reset Request", mailBody);
            } catch (MessagingException e) {
                throw new RuntimeException("Failed to send email", e);
            }

            return "Reset link sent to your email!";
        }
        return "User not found!";
    }

    // Reset Password
    public String resetPassword(String token, String newPassword) {
        Optional<User> userOpt = userRepository.findByResetToken(token);
        if (userOpt.isPresent()) {
            User user = userOpt.get();

            Date now = new Date();
            if (user.getTokenExpiry() == null || user.getTokenExpiry().before(now)) {
                return "Token expired!";
            }

            user.setPassword(passwordEncoder.encode(newPassword));
            user.setResetToken(null);
            user.setTokenExpiry(null);
            userRepository.save(user);

            return "Password updated successfully!";
        }
        return "Invalid token!";
    }

    // General sendEmail method
    private void sendEmail(String to, String subject, String body) throws MessagingException {
        emailService.sendSimpleEmail(to, subject, body);
    }



=======Repo=======
   Optional<User> findByEmail(String email);
    Optional<User> findByResetToken(String resetToken);







=======================================================
=======================================================
			Frointend part

========ForgotPasswordComponent  ts==========

import { HttpClient } from '@angular/common/http';
import { ChangeDetectorRef, Component } from '@angular/core';
import { Router } from '@angular/router';
import { AlertService } from '../../service/alert-service';

@Component({
  selector: 'app-forgot-password-component',
  standalone: false,
  templateUrl: './forgot-password-component.html',
  styleUrl: './forgot-password-component.css'
})
export class ForgotPasswordComponent {
  email: string = '';
  message: string = '';

  constructor(
    private http: HttpClient,
    private alertService: AlertService,
    private cdr:ChangeDetectorRef,
    private router: Router

  ) { }

  sendResetLink() {
    const formData = new URLSearchParams();
    formData.set('email', this.email);

    this.http.post('http://localhost:8085/api/user/forgot-password', formData.toString(), {
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
    })
      .subscribe({
        next: (res: any) => {
          this.message = res.message;
          this.alertService.success('Check your email and Change your password');
          this.cdr.markForCheck();
        },
        error: (err: any) => {
          this.message = 'Error sending reset link';
          this.alertService.error('Error sending reset link');
        }
      });

  }
}





=============ForgotPasswordComponent html============

<div class="container mt-5" style="max-width: 500px;">
  <div class="card shadow-sm">
    <div class="card-header bg-primary text-white text-center">
      <h3>Forgot Password</h3>
    </div>
    <div class="card-body">
      <p class="text-center text-muted">Enter your registered email to receive a reset link.</p>

      <div class="mb-3">
        <label for="email" class="form-label">Email Address</label>
        <input
          type="email"
          id="email"
          class="form-control"
          [(ngModel)]="email"
          placeholder="Enter your email">
      </div>

      <button class="btn btn-primary w-100" (click)="sendResetLink()">Send Reset Link</button>

      <div class="mt-3">
        <p class="text-success" *ngIf="message && message.includes('sent')">{{ message }}</p>
        <p class="text-danger" *ngIf="message && !message.includes('sent')">{{ message }}</p>
      </div>
    </div>
  </div>
</div>




==============ResetPasswordComponent  ts===========


import { HttpClient } from '@angular/common/http';
import { ChangeDetectorRef, Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { AlertService } from '../../service/alert-service';

@Component({
  selector: 'app-reset-password-component',
  standalone: false,
  templateUrl: './reset-password-component.html',
  styleUrl: './reset-password-component.css'
})
export class ResetPasswordComponent {
  token: string = '';
  newPassword: string = '';
  message: string = '';


// constructor(private http:HttpClient,
//   private alertService:AlertService,
//   private cdr:ChangeDetectorRef
// ){}


  constructor(
    private http: HttpClient,
     private route: ActivatedRoute,
    private alertService:AlertService
  ) {
    this.route.queryParams.subscribe(params => {
      this.token = params['token'] || '';
    });
  }

  resetPassword() {
    const formData = new URLSearchParams();
    formData.set('token', this.token);
    formData.set('newPassword', this.newPassword);

    this.http.post('http://localhost:8085/api/user/reset-password', formData.toString(), {
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
    }).subscribe({
      next: (res: any) =>{
        this.message = res.message
        this.alertService.success(this.message);
        // this.cdr.markForCheck();
      },
      error: (err: any) => {
        this.message = err.error?.message || 'Error resetting password'
        this.alertService.error(this.message);
      }
    });
  }
}

===============ResetPasswordComponent  html ==============


<!-- Email theke link click kore password change korer jonno -->
<div class="container mt-5" style="max-width: 450px;">
  <div class="card shadow-lg border-0 rounded-4">
    <div class="card-header bg-primary text-white text-center rounded-top-4">
      <h3 class="mb-0">üîê Reset Password</h3>
    </div>
    <div class="card-body p-4">
      <p class="text-muted text-center mb-4">
        Enter your new password below to reset your account password.
      </p>

      <div class="mb-3">
        <label for="newPassword" class="form-label fw-semibold">New Password</label>
        <input 
          type="password" 
          id="newPassword"
          class="form-control form-control-lg rounded-3"
          [(ngModel)]="newPassword" 
          placeholder="Enter new password">
      </div>

      <button 
        class="btn btn-primary w-100 py-2 rounded-3 fw-semibold shadow-sm" 
        (click)="resetPassword()">
        Reset Password
      </button>

      <div class="mt-3 text-center">
        <p class="text-success fw-semibold" *ngIf="message && message.includes('success')">{{ message }}</p>
        <p class="text-danger fw-semibold" *ngIf="message && !message.includes('success')">{{ message }}</p>
      </div>
    </div>
  </div>
</div>





