
http://localhost:8085/api/user/


//reja
user
{
  "name": "Reja",
  "email": "cmrejaulkarim@gmail.com",
  "password": "12345" 
}

account
{
  "type": "SAVINGS",
  "balance": 15000.50,
  "userName": "Reja",
  "activeStatus": true 
}

//sathe
user
{
  "name": "Sathe",
  "email": "sathekhanom550@gmail.com",
  "password": "12345" 
}

account
{
  "type": "SAVINGS",
  "balance": 15000.50,
  "userName": "Sathe",
  "activeStatus": true 
}


//sadier
user
{
  "name": "Sadier Rahman",
  "email": "sadiar.rahman970@gmail.com",
  "password": "12345" 
}

account
{
  "type": "SAVINGS",
  "balance": 15000.50,
  "userName": "Sadier Rahman",
  "activeStatus": true 
}

//Emran Mia
user
{
  "name": "Emran Mia",
  "email": "mr.t.imran11@gmail.com",
  "password": "12345",
  "account_id":"6" 
}

account
{
  "type": "SAVINGS",
  "balance": 15000.50,
  "userName": "Sadier Rahman",
  "activeStatus": true 
}


//UserRestController
//first a airokom silo
 @PostMapping
    public ResponseEntity<Map<String,String>>saveUser(
            @RequestPart(value = "user")String userJson,
            @RequestParam(value = "photo")MultipartFile file
            ) throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        User user = objectMapper.readValue(userJson, User.class);

        try {
            authService.saveOrUpdateUser(user, file);
            Map<String, String> response = new HashMap<>();
            response.put("Message", "User Added Successfully ");

            return new ResponseEntity<>(response, HttpStatus.OK);
        } catch (Exception e) {

            Map<String, String> errorResponse = new HashMap<>();
            errorResponse.put("Message", "User Add Faild " + e);
            return new ResponseEntity<>(errorResponse, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }



//UserRestController
//Second a airokom silo
 @PostMapping
    public ResponseEntity<Map<String,String>>saveUser(
            @RequestPart(value = "user")String userJson,
	    @RequestPart(value = "account")String accountJson,
            @RequestParam(value = "photo")MultipartFile file
            ) throws JsonProcessingException {
        ObjectMapper objectMapper = new ObjectMapper();
        User user = objectMapper.readValue(userJson, User.class);
 	Accounts accounts = objectMapper.readValue(accountJson, Accounts.class);

        try {
            authService.registerAccount(user, file, accounts);
            Map<String, String> response = new HashMap<>();
            response.put("Message", "User Added Successfully ");

            return new ResponseEntity<>(response, HttpStatus.OK);
        } catch (Exception e) {

            Map<String, String> errorResponse = new HashMap<>();
            errorResponse.put("Message", "User Add Faild " + e);
            return new ResponseEntity<>(errorResponse, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }